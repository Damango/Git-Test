{"version":3,"sources":["Components/Workout/Workout.js","Components/WorkoutsPage/WorkoutModal/Exercise/Exercise.js","Components/WorkoutsPage/WorkoutModal/CategoryButton/CategoryButton.js","Components/WorkoutsPage/WorkoutModal/WorkoutModal.js","Components/WorkoutsPage/WorkoutsPage.js","Components/HomePage/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["Workout","props","theDate","data","date","substr","className","onClick","changeModalData","title","tag","Exercise","useState","totalVolume","setTotalVolume","sets","theSets","setTheSets","addSet","setAddSet","totalSets","length","postSet","reps","document","querySelector","value","weight","axios","get","workoutID","then","res","updatedWorkout","newSets","exercises","id","push","put","i","volume","calculateVolume","useEffect","categories","map","category","set","placeholder","CategoryButton","selected","setSelected","styling","addCategory","text","WorkoutModal","workoutTitle","setWorkoutTitle","newWorkoutTitle","setExercises","newExercise","setNewExercise","setWorkoutID","setCategories","animations","useSpring","from","height","to","config","duration","enterWorkout","e","workoutInput","key","post","setTimeout","updateList","newCategories","cancel","splice","postExercise","exerciseTitle","console","log","onKeyDown","workoutLength","div","style","closeModal","exercise","renderNewExercise","delete","response","alert","WorkoutsPage","workoutData","setWorkoutData","createModal","setCreateModal","modalData","setModalData","workoutsLength","setWorkoutsLength","reverse","openCreateModal","defaults","xsrfCookieName","xsrfHeaderName","workout","HomePage","newView","changeView","App","setPageView","pageView","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c7500ff0.chunk.js","sourcesContent":["import React from 'react';\nimport \"./Workout.css\"\nconst Workout = (props) => {\n\n\n    let theDate = props.data.date.substr(0, 10)\n\n\n\n    function changeModalData() {\n        props.changeModalData(props.data);\n    }\n\n    return (<div className=\"workout-card-container\" onClick={changeModalData}>\n\n\n        <div className='workout-card-title'>{props.data.title}</div>\n        <div className=\"workout-tags-container\">\n            <div className=\"workout-card-date\">{theDate}</div>\n            <div className=\"workout-card-tag\">{props.data.tag}</div>\n        </div>\n\n\n\n\n\n\n    </div>);\n}\n\nexport default Workout;","import React, { useState, useEffect } from 'react';\nimport \"./Exercise.css\"\nimport axios from 'axios'\nconst Exercise = (props) => {\n\n\n    const [totalVolume, setTotalVolume] = useState(0)\n    const [setCount, setSetCount] = useState()\n    const [theSets, setTheSets] = useState(props.data.sets)\n    const [addSet, setAddSet] = useState(0)\n\n    let totalSets = props.data.sets.length\n\n    useEffect(() => {\n        let i;\n        let volume = 0;\n        for (i = 0; i < theSets.length; i++) {\n            volume += (theSets[i].reps * theSets[i].weight);\n        }\n        setTotalVolume(volume);\n    }, [])\n\n    function calculateVolume() {\n        let i;\n        let volume = 0;\n        for (i = 0; i < theSets.length; i++) {\n            volume += (theSets[i].reps * theSets[i].weight);\n        }\n        setTotalVolume(volume);\n    }\n\n\n\n    function postSet() {\n\n        let reps = document.querySelector('#reps-input').value;\n        let weight = document.querySelector(\"#weight-input\").value;\n\n        axios.get('http://localhost:8000/api/' + props.workoutID).then((res) => {\n            let updatedWorkout = res.data\n            let newSets = theSets\n            updatedWorkout.exercises[props.data.id].sets.push({ reps: reps, weight: weight })\n            newSets.push({ reps: reps, weight: weight })\n\n            axios.put('http://localhost:8000/api/' + props.workoutID + '/', updatedWorkout)\n\n            setTheSets(updatedWorkout.exercises[props.data.id].sets)\n            calculateVolume()\n        })\n\n    }\n\n    function renderAddSet() {\n\n        if (addSet === 1) {\n            return (<div className=\"set-add-container\">\n                <div className=\"set-input-container\">\n                    <span >Reps:</span>\n                    <input placeholder=\"Enter Reps\" className=\"sets-input\" id=\"reps-input\" />\n                </div>\n                <div className=\"set-input-container\">\n                    <span >Weight:</span>\n                    <input placeholder=\"Enter Weight\" className=\"sets-input\" id=\"weight-input\" />\n                </div>\n                <button onClick={postSet}>DONE</button>\n            </div>)\n        }\n        else {\n            return ''\n        }\n\n\n\n    }\n\n    function addSetSwitch() {\n        if (addSet === 0) {\n            setAddSet(1)\n        }\n        else {\n            setAddSet(0)\n        }\n\n    }\n\n\n\n\n\n    return (<div className=\"exercise-wrapper\">\n\n        <div className=\"exercise-header\">\n            <div className=\"exercise-title\">{props.data.title}</div>\n            <div className=\"exercise-categories\">{props.data.categories.map((category) => <div className={\"exercise-category \" + category}>{category}</div>)}</div>\n            <div className=\"total-sets\">Sets:  {totalSets}</div>\n            <div className=\"total-volume\">Volume:  {totalVolume}</div>\n        </div>\n        <div className=\"sets-editor-container\">\n            {theSets.map((set) => <div className=\"set-block\">{set.weight + ' x ' + set.reps}</div>)}\n            <button className=\"add-set-button\" onClick={addSetSwitch}>+</button>\n            {renderAddSet()}\n        </div>\n    </div>);\n}\n\nexport default Exercise;","import React, { useState } from 'react';\nimport \"./CategoryButton.css\"\n\nconst CategoryButton = (props) => {\n\n    const [selected, setSelected] = useState(\"category-button\")\n\n    return (<button className={selected + \" \" + props.styling} onClick={\n\n\n\n        () => {\n            if (selected === 'category-button-selected') {\n                setSelected('category-button')\n            }\n            else {\n                setSelected('category-button-selected')\n            }\n\n            props.addCategory(props.styling)\n        }\n\n\n    }>{props.text}</button>);\n}\n\nexport default CategoryButton;","import React, { useState, useEffect } from 'react';\nimport { useSpring, animated } from \"react-spring\"\nimport axios from 'axios';\nimport \"./WorkoutModal.css\"\nimport Excercise from \"./Exercise/Exercise\"\nimport CategoryButton from \"./CategoryButton/CategoryButton\"\nconst WorkoutModal = (props) => {\n\n    const [workoutTitle, setWorkoutTitle] = useState(props.data.title)\n    const [newWorkoutTitle, setNewWorkoutTitle] = useState(\"empty-workout-title\")\n    const [exercises, setExercises] = useState(props.data.exercises)\n    const [newExercise, setNewExercise] = useState(0)\n    const [workoutID, setWorkoutID] = useState(props.data.id)\n    const [categories, setCategories] = useState([]);\n    const animations = useSpring({ from: { height: 0 }, to: { height: 750 }, config: { duration: 100 } })\n\n\n\n    let theDate = props.data.date.substr(0, 10)\n\n    useEffect(() => {\n        if (workoutTitle === '') {\n\n            setWorkoutTitle(<div className={newWorkoutTitle}><input className=\"workout-title-input\" placeholder=\"Enter Workout Title\" onKeyDown={enterWorkout} /></div>)\n            setWorkoutID(props.workoutLength + 1)\n        }\n        else {\n            setWorkoutTitle(<div className=\"workout-modal-title\">{props.data.title}</div>)\n        }\n    }, [])\n\n\n    function enterWorkout(e) {\n        let workoutInput = document.querySelector('.workout-title-input')\n        if (e.key === 'Enter') {\n\n            axios.post('http://localhost:8000/api/', {\n                title: workoutInput.value,\n                tag: 'Strength',\n                exercises: []\n            })\n            setTimeout(function () {\n                props.updateList()\n            }, 100)\n            setWorkoutTitle(<div className=\"workout-modal-title\">{workoutInput.value}</div>)\n        }\n\n    }\n\n    function addNewExercise() {\n        if (newExercise === 0) {\n            setNewExercise(1)\n        }\n\n    }\n\n    function addCategory(category) {\n        let i;\n        let newCategories = categories;\n        let cancel = 0\n        for (i = 0; i <= categories.length; i++) {\n            if (newCategories[i] === category) {\n                newCategories.splice(i, 1)\n                cancel = 1;\n                break;\n            }\n        }\n        if (cancel === 0) {\n            newCategories.push(category);\n        }\n        setCategories(newCategories);\n    }\n\n\n    function postExercise() {\n        let exerciseTitle = document.querySelector('.new-exercise-input').value\n        axios.get('http://localhost:8000/api/' + workoutID).then((res) => {\n            let updatedWorkout = res.data\n            updatedWorkout.exercises.push({\n                title: exerciseTitle,\n                categories: categories,\n                sets: [],\n                id: updatedWorkout.exercises.length\n            })\n            console.log(updatedWorkout.exercises)\n            axios.put('http://localhost:8000/api/' + workoutID + '/', updatedWorkout)\n\n            setExercises(updatedWorkout.exercises)\n        })\n    }\n\n    function renderNewExercise() {\n        if (newExercise === 1) {\n            return (<div className=\"new-exercise-container\">\n                <input className=\"new-exercise-input\" placeholder=\"Exercise Name\" />\n                <div className=\"category-button-container\">\n                    <CategoryButton text=\"Chest\" styling=\"chest\" addCategory={addCategory} />\n                    <CategoryButton text=\"Back\" styling=\"back\" addCategory={addCategory} />\n                    <CategoryButton text=\"Shoulders\" styling=\"shoulders\" addCategory={addCategory} />\n                    <CategoryButton text=\"Legs\" styling=\"legs\" addCategory={addCategory} />\n                    <CategoryButton text=\"Tricep\" styling=\"tricep\" addCategory={addCategory} />\n                    <CategoryButton text=\"Bicep\" styling=\"bicep\" addCategory={addCategory} />\n                </div>\n                <button onClick={postExercise}>DONE</button>\n            </div>)\n        }\n    }\n\n\n    function deleteWorkout() {\n        axios.delete('http://localhost:8000/api/' + workoutID).then(response => { alert(\"Workout Deleted\") });\n\n    }\n\n    return (<animated.div style={animations} className='workout-modal-container'>\n        <button className=\"close-modal-button\" onClick={() => { props.closeModal(); props.updateList() }}>X</button>\n        <div className=\"modal-header\">\n            {workoutTitle}\n            <div className=\"workout-modal-date\">{theDate}</div>\n            <div>{workoutID}</div>\n        </div>\n        <div className=\"exercises-container\">\n            {exercises.map((exercise) => <Excercise data={exercise} workoutID={workoutID} />)}\n            <button onClick={addNewExercise} className=\"add-exercise-button\">Add Exercise +</button>\n            {renderNewExercise()}\n            <button className=\"delete-workout-button\" onClick={deleteWorkout}>DELETE</button>\n        </div>\n    </animated.div>);\n}\n\nexport default WorkoutModal;","import React, { useState, useEffect } from 'react';\nimport Workout from \"../Workout/Workout\"\nimport WorkoutModal from \"./WorkoutModal/WorkoutModal\"\nimport \"./WorkoutsPage.css\"\nimport axios from 'axios';\nconst WorkoutsPage = (props) => {\n\n\n    const [workoutData, setWorkoutData] = useState([])\n\n    const [createModal, setCreateModal] = useState(0)\n\n    const [modalData, setModalData] = useState()\n\n    const [workoutsLength, setWorkoutsLength] = useState(0)\n\n\n\n\n\n    useEffect(() => {\n        axios.get('http://localhost:8000/api/').then((res) => {\n            console.log(res.data)\n            setWorkoutData(res.data.reverse())\n            setWorkoutsLength(res.data.length)\n\n        })\n    }, [])\n\n    function updateList() {\n        axios.get('http://localhost:8000/api/').then((res) => {\n\n            setWorkoutData(res.data.reverse())\n            setWorkoutsLength(res.data.length)\n\n        })\n    }\n\n\n    function renderCreateModal() {\n\n        if (createModal === 1) {\n            return (<WorkoutModal data={modalData} closeModal={openCreateModal} updateList={updateList} workoutLength={workoutsLength} />)\n        } else {\n            return ''\n        }\n    }\n\n    function changeModalData(data) {\n        setCreateModal(0)\n        setModalData(data)\n\n        setTimeout(function () {\n            setCreateModal(1)\n        }, 10)\n\n    }\n\n\n\n    // When create workout is clicked make a new function to handle that specific\n    // instance and creates a blank modal with temporary information and\n    // Posts a blank structure to database.\n\n    function openCreateModal() {\n        if (createModal === 0) {\n            setCreateModal(1)\n        }\n        else if (createModal === 1) {\n            setCreateModal(0)\n        }\n    }\n\n\n    function addWorkout() {\n        axios.defaults.xsrfCookieName = 'csrftoken'\n        axios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\n        axios.post('http://localhost:8000/api/', {\n            title: 'Chest Day',\n            tag: 'Strength',\n            exercises: [{\n                title: 'Push Ups',\n                categories: ['Chest', 'Tricep'],\n                sets: [{\n                    reps: 20,\n                    weight: 225\n                }, {\n                    reps: 15,\n                    weight: 225\n                },\n                {\n                    reps: 10,\n                    weight: 225\n                }]\n            }, {\n                title: \"Bench Press\",\n                categories: ['Chest', \"Tricep\"],\n                sets: [{\n                    reps: 12,\n                    weight: 315\n                },\n                {\n                    reps: 10,\n                    weight: 325\n                },\n                {\n                    reps: 8,\n                    weight: 345\n                }]\n            }]\n        }\n        )\n    }\n    return (<div className=\"workouts-page-container\">\n\n\n        {renderCreateModal()}\n\n        <div className=\"left-view-container\">\n            <h1>WORKOUTS</h1>\n            <button className=\"create-workout-button\" onClick={() => {\n\n                changeModalData({\n                    title: '',\n                    tag: '',\n                    date: '12-20-41',\n                    exercises: []\n                });\n\n            }}\n            >+ Create Workout</button>\n            <button onClick={addWorkout}>Add Workout</button>\n\n            <div className=\"workouts-container\">\n                {workoutData.map((workout) => <Workout data={workout} changeModalData={changeModalData} />)}\n            </div>\n\n        </div>\n        <div className=\"right-view-container\">\n            <h1>VOLUME</h1>\n            <div className=\"workout-data-container\"></div>\n        </div>\n    </div>);\n}\n\nexport default WorkoutsPage;","import React, { useState } from 'react';\nimport WorkoutsPage from \"../WorkoutsPage/WorkoutsPage\"\nimport \"./HomePage.css\"\nconst HomePage = (props) => {\n\n\n\n\n\n    function changeView(newView) {\n        props.changeView(newView)\n    }\n\n\n\n\n    return (<div className=\"home-page-container\">\n\n        <div className=\"selector-container\">\n\n            <div className=\"app-selector workouts\" onClick={() => { changeView(<WorkoutsPage />) }}>WORKOUTS</div>\n            <div className=\"app-selector nutrition\">NUTRITION</div>\n            <div className=\"app-selector analytics\">ANALYTICS</div>\n        </div>\n\n    </div>);\n}\n\nexport default HomePage;","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport './App.css';\nimport HomePage from \"./Components/HomePage/HomePage\"\n\nfunction App() {\n\n\n\n\n  const [pageView, setPageView] = useState(<HomePage changeView={changeView} />)\n\n\n  function changeView(newView) {\n\n    setPageView(newView)\n  }\n\n\n  useEffect(() => {\n\n\n\n\n    axios.defaults.xsrfCookieName = 'csrftoken'\n    axios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\n\n\n\n  }, [])\n\n  return (\n    <div className=\"App\">\n      {pageView}\n    </div>\n  );\n}\n\nexport default App;\n/*\nWorkouts: [\n\n  {\n    id: 1,\n    date: TBD,\n    exercises:[\n      {\n        exerciseTitle: 'Bench Press',\n        categorys: ['Chest'],\n\n        sets: [{\n\n          reps: 10,\n          weight: 225\n        }],12,24,12],\n        volume: set[i].reps * set[i].weight\n        totalRepcount:\n        weight: 225\n      },\n         {\n        exerciseTitle: 'Pull Ups',\n        categorys: ['Back'],\n        reps: 15,\n        sets: 4,\n        weight: 225\n      },\n         {\n        exerciseTitle: 'DeadLifts',\n        categorys: ['Legs', 'Back],\n        reps: 15,\n        sets: 4,\n        weight: 225\n      }\n    ]\n  }\n\n\n]\n\n\n\n\n*/","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}